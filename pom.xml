<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>de.maggu2810.shk</groupId>
  <artifactId>shk</artifactId>
  <version>1.13-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>shk</name>
  <description>SmartHome for Karaf</description>

  <modules>
    <module>bundles</module>
    <module>distributions</module>
    <module>features</module>
    <module>tools</module>
  </modules>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <java.version>1.8</java.version>
    <maven.compiler.source>${java.version}</maven.compiler.source>
    <maven.compiler.target>${java.version}</maven.compiler.target>
    <maven.compiler.compilerVersion>${java.version}</maven.compiler.compilerVersion>

    <!-- BEG - Check to fit to Karaf version bundled one -->
    <karaf.version>4.2.1</karaf.version>
    <hibernate.version>5.2.9.Final</hibernate.version>
    <jetty.version>9.4.11.v20180605</jetty.version>
    <pax.web.version>7.2.3</pax.web.version>
    <pax.jdbc.version>1.3.0</pax.jdbc.version>
    <spring.version>5.0.8.RELEASE_1</spring.version>
    <!-- END - Check to fit to Karaf version bundled one -->

    <bnd.version>4.1.0</bnd.version>
    <checkerframework.version>2.5.7</checkerframework.version>
    <checkerframework.compiler.arg1>-AplaceholderToBeReplaced</checkerframework.compiler.arg1>
    <checkerframework.qual.groupId>de.maggu2810.osgi-ify.org.checkerframework.checker-qual</checkerframework.qual.groupId>
    <esh.version>0.10.0.a18</esh.version>
    <esh.groupId.prefix>de.maggu2810.3rdparty.esh</esh.groupId.prefix>
    <jackson.version>1.9.13</jackson.version>
    <jersey.version>2.22.2</jersey.version>
    <kat.version>1.9.9</kat.version>
    <slf4j.version>1.7.21</slf4j.version>
    <spotbugs.version>3.1.6</spotbugs.version>
    <pmd.version>6.5.0</pmd.version>

    <quality.skip>false</quality.skip>

    <license.skipUpdateLicense>false</license.skipUpdateLicense>
    <license.shortcut>epl_only_v1</license.shortcut>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Apache Commons -->
      <dependency>
        <groupId>commons-io</groupId>
        <artifactId>commons-io</artifactId>
        <version>2.2</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.4</version>
      </dependency>

      <!-- Checker Framework -->
      <dependency>
        <!-- annotations from the Checker Framework: nullness, interning, locking, ... -->
        <groupId>${checkerframework.qual.groupId}</groupId>
        <artifactId>checker-qual</artifactId>
        <version>${checkerframework.version}</version>
      </dependency>

      <!-- Eclipse JDT -->
      <dependency>
        <!-- Eclipse Public License - v 1.0; http://www.eclipse.org/legal/epl-v10.html -->
        <groupId>org.eclipse.jdt</groupId>
        <artifactId>org.eclipse.jdt.annotation</artifactId>
        <version>2.1.0</version>
      </dependency>

      <!-- Eclipse SmartHome -->
      <dependency>
        <groupId>${esh.groupId.prefix}.core</groupId>
        <artifactId>org.eclipse.smarthome.core</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.core</groupId>
        <artifactId>org.eclipse.smarthome.core.audio</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.core</groupId>
        <artifactId>org.eclipse.smarthome.core.persistence</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.core</groupId>
        <artifactId>org.eclipse.smarthome.core.thing</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.config</groupId>
        <artifactId>org.eclipse.smarthome.config.core</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.config</groupId>
        <artifactId>org.eclipse.smarthome.config.discovery</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.io</groupId>
        <artifactId>org.eclipse.smarthome.io.transport.mdns</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.model</groupId>
        <artifactId>org.eclipse.smarthome.model.core</artifactId>
        <version>${esh.version}</version>
      </dependency>
      <dependency>
        <groupId>${esh.groupId.prefix}.model</groupId>
        <artifactId>org.eclipse.smarthome.model.sitemap</artifactId>
        <version>${esh.version}</version>
      </dependency>

      <!-- EMF, Xtend, Xtext -->
      <dependency>
        <groupId>org.eclipse.emf</groupId>
        <artifactId>org.eclipse.emf.common</artifactId>
        <version>2.11.0-v20150805-0538</version>
      </dependency>
      <dependency>
        <groupId>org.eclipse.emf</groupId>
        <artifactId>org.eclipse.emf.ecore</artifactId>
        <version>2.11.1-v20150805-0538</version>
      </dependency>

      <!-- Findbugs -->
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>annotations</artifactId>
        <version>3.0.1u2</version>
      </dependency>

      <!-- Jackson -->
      <dependency>
        <!--Apache License, Version 2.0 -->
        <groupId>org.codehaus.jackson</groupId>
        <artifactId>jackson-mapper-asl</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <!-- JmDNS -->
      <dependency>
        <!--Apache License, Version 2.0 -->
        <groupId>org.jmdns</groupId>
        <artifactId>jmdns</artifactId>
        <version>3.5.1</version>
      </dependency>

      <!-- JUnit -->
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>

      <!-- jUPnP -->
      <dependency>
        <!--CDDL 1.0 -->
        <groupId>org.jupnp</groupId>
        <artifactId>org.jupnp</artifactId>
        <version>2.2.0</version>
      </dependency>

      <!-- OSGi -->
      <dependency>
        <!--Apache License, Version 2.0 -->
        <groupId>org.osgi</groupId>
        <artifactId>osgi.core</artifactId>
        <version>6.0.0</version>
      </dependency>
      <dependency>
        <!--Apache License, Version 2.0 -->
        <groupId>org.osgi</groupId>
        <artifactId>osgi.cmpn</artifactId>
        <version>6.0.0</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>osgi.annotation</artifactId>
        <version>6.0.1</version>
      </dependency>

      <!-- Simple Logging Facade for Java (SLF4J) -->
      <dependency>
        <!--MIT License -->
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>

        <!-- sorted by artifact id (group id not used for sorting) -->

        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-export-maven-plugin</artifactId>
          <version>${bnd.version}</version>
        </plugin>

        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-indexer-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <configuration>
            <localURLs>REQUIRED</localURLs>
          </configuration>
          <executions>
            <execution>
              <id>index</id>
              <goals>
                <goal>index</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>biz.aQute.bnd</groupId>
          <artifactId>bnd-maven-plugin</artifactId>
          <version>${bnd.version}</version>
          <executions>
            <execution>
              <goals>
                <goal>bnd-process</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>build-helper-maven-plugin</artifactId>
          <version>1.9.1</version>
        </plugin>

        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs.version}</version>
          <configuration>
            <skip>${quality.skip}</skip>
            <plugins>
              <plugin>
                <!-- https://github.com/KengoTODA/findbugs-slf4j -->
                <groupId>jp.skypencil.findbugs.slf4j</groupId>
                <artifactId>bug-pattern</artifactId>
                <version>1.4.0</version>
              </plugin>
            </plugins>
            <findbugsXmlOutput>true</findbugsXmlOutput>
            <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
            <xmlOutput>true</xmlOutput>
            <effort>Max</effort>
            <threshold>Low</threshold>
            <maxRank>20</maxRank>
            <excludeFilterFile>${basedirRoot}/quality/findbugs/findbugs_exclude.xml</excludeFilterFile>
          </configuration>
          <dependencies>
            <!-- overwrite dependency on spotbugs if you want to specify the version of spotbugs -->
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs</artifactId>
              <version>${spotbugs.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <extensions>true</extensions>
        </plugin>

        <plugin>
          <groupId>org.apache.karaf.tooling</groupId>
          <artifactId>karaf-services-maven-plugin</artifactId>
          <version>${karaf.version}</version>
          <executions>
            <execution>
              <id>service-metadata-generate</id>
              <goals>
                <goal>service-metadata-generate</goal>
              </goals>
              <phase>process-classes</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>license-maven-plugin</artifactId>
          <version>1.16</version>
          <configuration>
            <licenseName>${license.shortcut}</licenseName>
            <!--<licenseResolver>classpath://licenses</licenseResolver> -->
            <addJavaLicenseAfterPackage>false</addJavaLicenseAfterPackage>
            <emptyLineAfterHeader>true</emptyLineAfterHeader>
            <ignoreNoFileToScan>true</ignoreNoFileToScan>
          </configuration>
          <executions>
            <execution>
              <goals>
                <goal>update-file-header</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <includes>
                  <include>**/*.java</include>
                </includes>
                <excludes>
                  <exclude>**/feature.xml</exclude>
                </excludes>
                <canUpdateCopyright>true</canUpdateCopyright>
                <canUpdateDescription>true</canUpdateDescription>
                <canUpdateLicense>true</canUpdateLicense>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-antrun-plugin</artifactId>
          <version>1.8</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>3.0.0</version>
          <configuration>
            <skip>${quality.skip}</skip>
            <configLocation>${basedirRoot}/quality/checkstyle/checkstyle.xml</configLocation>
            <propertyExpansion>config_loc=${basedirRoot}/quality/checkstyle</propertyExpansion>
            <violationSeverity>info</violationSeverity>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>com.puppycrawl.tools</groupId>
              <artifactId>checkstyle</artifactId>
              <version>8.11</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-dependency-plugin</artifactId>
          <version>2.10</version>
        </plugin>

        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>

        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.10.3</version>
          <configuration>
            <failOnError>!${quality.skip}</failOnError>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>3.10.0</version>
          <configuration>
            <skip>${quality.skip}</skip>
            <linkXRef>false</linkXRef>
            <rulesets>
              <ruleset>${basedirRoot}/quality/pmd/pmd_ruleset.xml</ruleset>
            </rulesets>
          </configuration>
          <dependencies>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-core</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-java</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-javascript</artifactId>
              <version>${pmd.version}</version>
            </dependency>
            <dependency>
              <groupId>net.sourceforge.pmd</groupId>
              <artifactId>pmd-jsp</artifactId>
              <version>${pmd.version}</version>
            </dependency>
          </dependencies>
        </plugin>

        <plugin>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.2</version>
          <configuration>
            <preparationGoals>clean install</preparationGoals>
          </configuration>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>2.4.3</version>
          <configuration>
            <filters>
              <filter>
                <artifact>*:*</artifact>
                <excludes>
                  <exclude>META-INF/*.SF</exclude>
                  <exclude>META-INF/*.DSA</exclude>
                  <exclude>META-INF/*.RSA</exclude>
                </excludes>
              </filter>
            </filters>
          </configuration>
        </plugin>

        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.4</version>
        </plugin>

        <plugin>
          <groupId>org.jasig.maven</groupId>
          <artifactId>sass-maven-plugin</artifactId>
          <version>1.1.1</version>
          <executions>
            <execution>
              <id>package</id>
              <goals>
                <goal>update-stylesheets</goal>
              </goals>
              <phase>prepare-package</phase>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>com.github.dantwining.whitespace-maven-plugin</groupId>
          <artifactId>whitespace-maven-plugin</artifactId>
          <version>1.0.4</version>
          <executions>
            <execution>
              <goals>
                <goal>trim</goal>
              </goals>
              <phase>process-sources</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.commonjava.maven.plugins</groupId>
        <artifactId>directory-maven-plugin</artifactId>
        <version>0.1</version>
        <executions>
          <execution>
            <id>directories</id>
            <goals>
              <goal>highest-basedir</goal>
            </goals>
            <phase>initialize</phase>
            <configuration>
              <property>basedirRoot</property>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>2.5</version>
      </plugin>
    </plugins>
  </reporting>

  <inceptionYear>2015</inceptionYear>

  <organization>
    <name>maggu2810</name>
    <url>https://github.com/maggu2810/</url>
  </organization>

  <licenses>
    <license>
      <name>Eclipse Public License</name>
      <url>http://www.eclipse.org/legal/epl-v10.html</url>
    </license>
  </licenses>

  <scm>
    <connection>scm:git:https://github.com/maggu2810/shk.git</connection>
    <developerConnection>scm:git:git@github.com:maggu2810/shk.git</developerConnection>
    <url>https://github.com/maggu2810/shk</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>Github</system>
    <url>https://github.com/maggu2810/shk/issues</url>
  </issueManagement>

  <repositories>
    <!-- Maven Central -->
    <!-- Use this first, so we prefer Central all the time -->
    <repository>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Maven Repository Switchboard</name>
      <url>https://repo1.maven.org/maven2</url>
    </repository>

    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>jCenter</id>
      <url>https://jcenter.bintray.com/</url>
    </repository>

    <!-- maggu2810's private repository -->
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>bintray-maggu2810-maven</id>
      <url>https://dl.bintray.com/maggu2810/maven/</url>
    </repository>

    <!-- maggu2810's SmartHome repository -->
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>bintray-maggu2810-smarthome</id>
      <url>https://dl.bintray.com/maggu2810/smarthome/</url>
    </repository>

    <!-- jUPnP -->
    <repository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>jupnp-bintray</id>
      <url>https://dl.bintray.com/jupnp/mvn/</url>
    </repository>

    <!-- Eclipse Release Repository -->
    <!-- <repository> -->
    <!-- <id>eclipse-releases</id> -->
    <!-- <name>Eclipse Release Repository</name> -->
    <!-- <layout>default</layout> -->
    <!-- <url>https://repo.eclipse.org/content/repositories/releases/</url> -->
    <!-- <snapshots> -->
    <!-- <enabled>false</enabled> -->
    <!-- </snapshots> -->
    <!-- </repository> -->

    <!-- Eclipse Snapshot Repository -->
    <!-- <repository> -->
    <!-- <id>eclipse-snapshots</id> -->
    <!-- <name>Eclipse Snapshot Repository</name> -->
    <!-- <layout>default</layout> -->
    <!-- <url>https://repo.eclipse.org/content/repositories/snapshots/</url> -->
    <!-- <snapshots> -->
    <!-- <enabled>true</enabled> -->
    <!-- </snapshots> -->
    <!-- </repository> -->

    <!-- <repository> -->
    <!-- <id>ojo-libs-release</id> -->
    <!-- <url>https://oss.jfrog.org/artifactory/simple/libs-release/</url> -->
    <!-- <releases> -->
    <!-- <enabled>true</enabled> -->
    <!-- </releases> -->
    <!-- <snapshots> -->
    <!-- <enabled>false</enabled> -->
    <!-- </snapshots> -->
    <!-- </repository> -->
    <!-- <repository> -->
    <!-- <id>ojo-libs-snapshot</id> -->
    <!-- <url>https://oss.jfrog.org/artifactory/simple/libs-snapshot/</url> -->
    <!-- <releases> -->
    <!-- <enabled>false</enabled> -->
    <!-- </releases> -->
    <!-- <snapshots> -->
    <!-- <enabled>true</enabled> -->
    <!-- </snapshots> -->
    <!-- </repository> -->
  </repositories>

  <pluginRepositories>
    <!-- Maven Central -->
    <!-- Use this first, so we prefer Central all the time -->
    <pluginRepository>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>central</id>
      <name>Maven Plugin Repository</name>
      <url>https://repo1.maven.org/maven2</url>
    </pluginRepository>

    <pluginRepository>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
      <id>bintray-maggu2810-maven</id>
      <url>https://dl.bintray.com/maggu2810/maven/</url>
    </pluginRepository>
    <!-- <pluginRepository> -->
    <!-- <id>ojo-libs-release</id> -->
    <!-- <url>https://oss.jfrog.org/artifactory/simple/libs-release/</url> -->
    <!-- <releases> -->
    <!-- <enabled>true</enabled> -->
    <!-- </releases> -->
    <!-- <snapshots> -->
    <!-- <enabled>false</enabled> -->
    <!-- </snapshots> -->
    <!-- </pluginRepository> -->
    <!-- <pluginRepository> -->
    <!-- <id>ojo-libs-snapshot</id> -->
    <!-- <url>https://oss.jfrog.org/artifactory/simple/libs-snapshot/</url> -->
    <!-- <releases> -->
    <!-- <enabled>false</enabled> -->
    <!-- </releases> -->
    <!-- <snapshots> -->
    <!-- <enabled>true</enabled> -->
    <!-- </snapshots> -->
    <!-- </pluginRepository> -->
  </pluginRepositories>

  <distributionManagement>
    <repository>
      <id>bintray</id>
      <url>https://api.bintray.com/maven/maggu2810/smarthome/shk</url>
    </repository>
    <snapshotRepository>
      <id>bintray</id>
      <url>https://oss.jfrog.org/artifactory/simple/oss-snapshot-local/</url>
    </snapshotRepository>
  </distributionManagement>

  <profiles>
    <!-- Set 'os.id' -->
    <profile>
      <id>os.id</id>
      <activation>
        <property>
          <name>!skipInjectionOfOsId</name>
        </property>
      </activation>
      <properties>
        <os.id>${os.family}-${os.arch}</os.id>
      </properties>
    </profile>
    <!-- BEGIN: Set the 'os.family' property -->
    <!-- Valid activation options are (see https://maven.apache.org/enforcer/enforcer-rules/requireOS.html): -->
    <!-- dos, mac, netware, os/2, tandem, unix, windows, win9x, z/os, os/400 -->
    <profile>
      <id>os.family.mac</id>
      <activation>
        <os>
          <family>mac</family>
        </os>
      </activation>
      <properties>
        <os.family>mac</os.family>
      </properties>
    </profile>
    <profile>
      <id>os.family.unix</id>
      <activation>
        <os>
          <family>unix</family>
        </os>
      </activation>
      <properties>
        <os.family>unix</os.family>
      </properties>
    </profile>
    <profile>
      <id>os.family.windows</id>
      <activation>
        <os>
          <family>windows</family>
        </os>
      </activation>
      <properties>
        <os.family>windows</os.family>
      </properties>
    </profile>
    <!-- END: Set the 'os.family' property -->

    <profile>
      <id>checkerframework-check</id>
      <activation>
        <property>
          <name>check</name>
        </property>
      </activation>

      <properties>
        <fixloc.dir>${java.io.tmpdir}/maven.build.${user.name}/fixloc</fixloc.dir>
        <fixloc.checkerframework.jdk8.jar>org.checkerframework.jdk8-${checkerframework.version}.jar</fixloc.checkerframework.jdk8.jar>
      </properties>

      <dependencies>
        <!-- Without a dependency to the core framework the checker fails for every bundle not depend on it... -->
        <!-- org.osgi.framework.Bundle -->
        <dependency>
          <groupId>org.osgi</groupId>
          <artifactId>osgi.core</artifactId>
          <scope>provided</scope>
        </dependency>
      </dependencies>

      <build>
        <plugins>
          <plugin>
            <!-- This plugin will set the properties values using dependency information -->
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
              <execution>
                <goals>
                  <goal>properties</goal>
                </goals>
              </execution>
              <execution>
                <id>copy-checkerframework-stuff</id>
                <goals>
                  <goal>copy</goal>
                </goals>
                <phase>validate</phase>
                <configuration>
                  <artifactItems>
                    <artifactItem>
                      <!-- The annotated JDK to use -->
                      <groupId>org.checkerframework</groupId>
                      <artifactId>jdk8</artifactId>
                      <version>${checkerframework.version}</version>
                      <type>jar</type>
                      <destFileName>${fixloc.checkerframework.jdk8.jar}</destFileName>
                    </artifactItem>
                  </artifactItems>
                  <outputDirectory>${fixloc.dir}</outputDirectory>
                  <overWriteReleases>false</overWriteReleases>
                  <overWriteSnapshots>true</overWriteSnapshots>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <!-- <fork>true</fork> -->

              <!-- <compilerArguments> -->
              <!-- <Xmaxerrs>10000</Xmaxerrs> -->
              <!-- <Xmaxwarns>10000</Xmaxwarns> -->
              <!-- </compilerArguments> -->

              <annotationProcessorPaths>
                <path>
                  <groupId>org.checkerframework</groupId>
                  <artifactId>checker</artifactId>
                  <version>${checkerframework.version}</version>
                </path>
              </annotationProcessorPaths>

              <annotationProcessors>
                <!-- Add all the checkers you want to enable here -->
                <annotationProcessor>org.checkerframework.checker.nullness.NullnessChecker</annotationProcessor>
              </annotationProcessors>

              <compilerArgs>
                <!-- directory containing annotated library stubs -->
                <arg>-Astubs=${basedirRoot}/tools/checkerframework/stubs</arg>
                <arg>-AstubWarnIfNotFound</arg>
                <arg>-AstubWarnIfOverwritesBytecode</arg>
                <arg>-AstubDebug</arg>

                <!-- -Awarns Treat checker errors as warnings. -->
                <!-- If you use this, you may wish to also supply -Xmaxwarns 10000 (see compiler arguments), because by default javac prints at most 100 warnings. -->
                <!-- <arg>-Awarns</arg> -->
                <arg>${checkerframework.compiler.arg1}</arg>

                <!-- -AshowSuppressWarningKeys With each warning, show all possible keys to suppress that warning. -->
                <arg>-AshowSuppressWarningKeys</arg>

                <!-- location of the annotated JDK, which comes from a Maven dependency -->
                <arg>-Xbootclasspath/p:${fixloc.dir}/${fixloc.checkerframework.jdk8.jar}</arg>
              </compilerArgs>
            </configuration>
          </plugin>

          <!-- <plugin> -->
          <!-- <groupId>org.apache.maven.plugins</groupId> -->
          <!-- <artifactId>maven-antrun-plugin</artifactId> -->
          <!-- <executions> -->
          <!-- <execution> -->
          <!-- <phase>validate</phase> -->
          <!-- <goals> -->
          <!-- <goal>run</goal> -->
          <!-- </goals> -->
          <!-- <configuration> -->
          <!-- <tasks> -->
          <!-- <echo>[fixloc.dir] ${fixloc.dir}</echo> -->
          <!-- <echo>[fixloc.checkerframework.jdk8.jar] ${fixloc.checkerframework.jdk8.jar}</echo> -->
          <!-- </tasks> -->
          <!-- </configuration> -->
          <!-- </execution> -->
          <!-- </executions> -->
          <!-- </plugin> -->
        </plugins>
      </build>
    </profile>

    <profile>
      <id>check-buildsystem</id>
      <activation>
        <property>
          <name>check</name>
          <value>buildsystem</value>
        </property>
      </activation>
      <properties>
        <license.skipUpdateLicense>true</license.skipUpdateLicense>
      </properties>
      <build>
        <defaultGoal>clean install spotbugs:spotbugs pmd:pmd pmd:cpd checkstyle:checkstyle javadoc:javadoc</defaultGoal>
      </build>
    </profile>

    <profile>
      <id>check-commit-goals</id>
      <activation>
        <property>
          <name>check</name>
          <value>commit</value>
        </property>
      </activation>
      <build>
        <defaultGoal>clean install spotbugs:check pmd:check checkstyle:check javadoc:javadoc</defaultGoal>
      </build>
    </profile>

    <profile>
      <id>check-commit-style</id>
      <activation>
        <property>
          <name>check</name>
          <value>commit</value>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>license-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs-maven-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-checkstyle-plugin</artifactId>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-pmd-plugin</artifactId>
          </plugin>

          <!-- TODO: Need to evaluate how we can ensure that using a profile -->
          <!-- Execute this at last step of a phase -->
          <!-- since Maven 3.0.3, for two plugins bound to the same phase, -->
          <!-- the order of execution is the same as the order in which you define them. -->
          <plugin>
            <groupId>com.github.dantwining.whitespace-maven-plugin</groupId>
            <artifactId>whitespace-maven-plugin</artifactId>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Karaf Snapshot -->
    <profile>
      <id>repos-apache-snapshots</id>
      <activation>
        <property>
          <name>karaf-snapshot</name>
        </property>
      </activation>
      <repositories>
        <repository>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>apache-snapshots</id>
          <url>https://repository.apache.org/snapshots/</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <releases>
            <enabled>false</enabled>
          </releases>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <id>apache-snapshots</id>
          <url>https://repository.apache.org/snapshots/</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <id>K412-SNAPSHOT</id>
      <activation>
        <property>
          <name>karaf-snapshot</name>
          <value>4.1.2</value>
        </property>
      </activation>
      <properties>
        <karaf.version>4.1.2-SNAPSHOT</karaf.version>
        <hibernate.version>5.2.8.Final</hibernate.version>
        <jetty.version>9.3.14.v20161028</jetty.version>
        <pax.web.version>6.0.6</pax.web.version>
        <pax.jdbc.version>1.1.0</pax.jdbc.version>
        <spring.version>4.3.10.RELEASE_1</spring.version>
      </properties>
    </profile>
    <profile>
      <id>K410-staging-2</id>
      <activation>
        <property>
          <name>karaf-staging</name>
          <value>4.1.0-2</value>
        </property>
      </activation>
      <properties>
        <karaf.version>4.1.0</karaf.version>
        <jetty.version>9.3.15.v20161220</jetty.version>
        <pax.web.version>6.0.2</pax.web.version>
        <pax.jdbc.version>1.0.0</pax.jdbc.version>
        <spring.version>4.3.5.RELEASE_1</spring.version>
      </properties>
      <repositories>
        <repository>
          <id>K410-staging-2</id>
          <name>Apache Karaf 4.1.0 Staging Repository - 2</name>
          <url>https://repository.apache.org/content/repositories/orgapachekaraf-1089/</url>
        </repository>
      </repositories>
      <pluginRepositories>
        <pluginRepository>
          <id>K410-staging-2</id>
          <name>Apache Karaf 4.1.0 Staging Repository - 2</name>
          <url>https://repository.apache.org/content/repositories/orgapachekaraf-1089/</url>
        </pluginRepository>
      </pluginRepositories>
    </profile>
    <profile>
      <id>K412</id>
      <activation>
        <property>
          <name>karaf</name>
          <value>4.1.2</value>
        </property>
      </activation>
      <properties>
        <karaf.version>4.1.2</karaf.version>
        <hibernate.version>5.2.8.Final</hibernate.version>
        <jetty.version>9.3.14.v20161028</jetty.version>
        <pax.web.version>6.0.6</pax.web.version>
        <pax.jdbc.version>1.1.0</pax.jdbc.version>
        <spring.version>4.3.10.RELEASE_1</spring.version>
      </properties>
    </profile>
    <profile>
      <id>K413</id>
      <activation>
        <property>
          <name>karaf</name>
          <value>4.1.3</value>
        </property>
      </activation>
      <properties>
        <karaf.version>4.1.3</karaf.version>
        <hibernate.version>5.2.8.Final</hibernate.version>
        <jetty.version>9.3.14.v20161028</jetty.version>
        <pax.web.version>6.0.7</pax.web.version>
        <pax.jdbc.version>1.1.0</pax.jdbc.version>
        <spring.version>4.3.12.RELEASE_1</spring.version>
      </properties>
    </profile>
    <profile>
      <id>K414</id>
      <activation>
        <property>
          <name>karaf</name>
          <value>4.1.4</value>
        </property>
      </activation>
      <properties>
        <karaf.version>4.1.4</karaf.version>
        <hibernate.version>5.2.8.Final</hibernate.version>
        <jetty.version>9.3.21.v20170918</jetty.version>
        <pax.web.version>6.0.9</pax.web.version>
        <pax.jdbc.version>1.1.0</pax.jdbc.version>
        <spring.version>4.3.12.RELEASE_1</spring.version>
      </properties>
    </profile>
    <profile>
      <id>K415</id>
      <activation>
        <property>
          <name>karaf</name>
          <value>4.1.5</value>
        </property>
      </activation>
      <properties>
        <karaf.version>4.1.5</karaf.version>
        <hibernate.version>5.2.9.Final</hibernate.version>
        <jetty.version>9.3.21.v20170918</jetty.version>
        <pax.web.version>6.0.9</pax.web.version>
        <pax.jdbc.version>1.1.0</pax.jdbc.version>
        <spring.version>4.3.14.RELEASE_1</spring.version>
      </properties>
    </profile>
    <profile>
      <id>K420</id>
      <activation>
        <property>
          <name>karaf</name>
          <value>4.2.0</value>
        </property>
      </activation>
      <properties>
        <!-- <karaf.repo.staging.take1>https://repository.apache.org/content/repositories/orgapachekaraf-1110/</karaf.repo.staging.take1> -->
        <!-- <karaf.repo.staging.take2>https://repository.apache.org/content/repositories/orgapachekaraf-1111/</karaf.repo.staging.take2> -->
        <karaf.version>4.2.0</karaf.version>
        <hibernate.version>5.2.9.Final</hibernate.version>
        <jetty.version>9.4.6.v20170531</jetty.version>
        <pax.web.version>7.0.0</pax.web.version>
        <pax.jdbc.version>1.2.0</pax.jdbc.version>
        <spring.version>5.0.4.RELEASE_1</spring.version>
      </properties>
      <!-- <repositories> -->
      <!-- <repository> -->
      <!-- <id>karaf-staging</id> -->
      <!-- <url>${karaf.repo.staging.take2}</url> -->
      <!-- </repository> -->
      <!-- </repositories> -->
      <!-- <pluginRepositories> -->
      <!-- <pluginRepository> -->
      <!-- <id>karaf-staging</id> -->
      <!-- <url>${karaf.repo.staging.take2}</url> -->
      <!-- </pluginRepository> -->
      <!-- </pluginRepositories> -->
    </profile>
  </profiles>

</project>
